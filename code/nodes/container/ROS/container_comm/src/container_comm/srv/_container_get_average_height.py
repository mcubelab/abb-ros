"""autogenerated by genmsg_py from container_get_average_heightRequest.msg. Do not edit."""
import roslib.message
import struct


class container_get_average_heightRequest(roslib.message.Message):
  _md5sum = "54051420933b1453a53614ae213de1cf"
  _type = "container_comm/container_get_average_heightRequest"
  _has_header = False #flag to mark the presence of a Header object
  _full_text = """
float64 x
float64 y
float64 radius




"""
  __slots__ = ['x','y','radius']
  _slot_types = ['float64','float64','float64']

  def __init__(self, *args, **kwds):
    """
    Constructor. Any message fields that are implicitly/explicitly
    set to None will be assigned a default value. The recommend
    use is keyword arguments as this is more robust to future message
    changes.  You cannot mix in-order arguments and keyword arguments.
    
    The available fields are:
       x,y,radius
    
    @param args: complete set of field values, in .msg order
    @param kwds: use keyword arguments corresponding to message field names
    to set specific fields. 
    """
    if args or kwds:
      super(container_get_average_heightRequest, self).__init__(*args, **kwds)
      #message fields cannot be None, assign default values for those that are
      if self.x is None:
        self.x = 0.
      if self.y is None:
        self.y = 0.
      if self.radius is None:
        self.radius = 0.
    else:
      self.x = 0.
      self.y = 0.
      self.radius = 0.

  def _get_types(self):
    """
    internal API method
    """
    return self._slot_types

  def serialize(self, buff):
    """
    serialize message into buffer
    @param buff: buffer
    @type  buff: StringIO
    """
    try:
      _x = self
      buff.write(_struct_3d.pack(_x.x, _x.y, _x.radius))
    except struct.error, se: self._check_types(se)
    except TypeError, te: self._check_types(te)

  def deserialize(self, str):
    """
    unpack serialized message in str into this message instance
    @param str: byte array of serialized message
    @type  str: str
    """
    try:
      end = 0
      _x = self
      start = end
      end += 24
      (_x.x, _x.y, _x.radius,) = _struct_3d.unpack(str[start:end])
      return self
    except struct.error, e:
      raise roslib.message.DeserializationError(e) #most likely buffer underfill


  def serialize_numpy(self, buff, numpy):
    """
    serialize message with numpy array types into buffer
    @param buff: buffer
    @type  buff: StringIO
    @param numpy: numpy python module
    @type  numpy module
    """
    try:
      _x = self
      buff.write(_struct_3d.pack(_x.x, _x.y, _x.radius))
    except struct.error, se: self._check_types(se)
    except TypeError, te: self._check_types(te)

  def deserialize_numpy(self, str, numpy):
    """
    unpack serialized message in str into this message instance using numpy for array types
    @param str: byte array of serialized message
    @type  str: str
    @param numpy: numpy python module
    @type  numpy: module
    """
    try:
      end = 0
      _x = self
      start = end
      end += 24
      (_x.x, _x.y, _x.radius,) = _struct_3d.unpack(str[start:end])
      return self
    except struct.error, e:
      raise roslib.message.DeserializationError(e) #most likely buffer underfill

_struct_I = roslib.message.struct_I
_struct_3d = struct.Struct("<3d")
"""autogenerated by genmsg_py from container_get_average_heightResponse.msg. Do not edit."""
import roslib.message
import struct


class container_get_average_heightResponse(roslib.message.Message):
  _md5sum = "63fbc21a0a6b8210818b2625ab89e876"
  _type = "container_comm/container_get_average_heightResponse"
  _has_header = False #flag to mark the presence of a Header object
  _full_text = """float64 avgHeight
int32 numPoints


"""
  __slots__ = ['avgHeight','numPoints']
  _slot_types = ['float64','int32']

  def __init__(self, *args, **kwds):
    """
    Constructor. Any message fields that are implicitly/explicitly
    set to None will be assigned a default value. The recommend
    use is keyword arguments as this is more robust to future message
    changes.  You cannot mix in-order arguments and keyword arguments.
    
    The available fields are:
       avgHeight,numPoints
    
    @param args: complete set of field values, in .msg order
    @param kwds: use keyword arguments corresponding to message field names
    to set specific fields. 
    """
    if args or kwds:
      super(container_get_average_heightResponse, self).__init__(*args, **kwds)
      #message fields cannot be None, assign default values for those that are
      if self.avgHeight is None:
        self.avgHeight = 0.
      if self.numPoints is None:
        self.numPoints = 0
    else:
      self.avgHeight = 0.
      self.numPoints = 0

  def _get_types(self):
    """
    internal API method
    """
    return self._slot_types

  def serialize(self, buff):
    """
    serialize message into buffer
    @param buff: buffer
    @type  buff: StringIO
    """
    try:
      _x = self
      buff.write(_struct_di.pack(_x.avgHeight, _x.numPoints))
    except struct.error, se: self._check_types(se)
    except TypeError, te: self._check_types(te)

  def deserialize(self, str):
    """
    unpack serialized message in str into this message instance
    @param str: byte array of serialized message
    @type  str: str
    """
    try:
      end = 0
      _x = self
      start = end
      end += 12
      (_x.avgHeight, _x.numPoints,) = _struct_di.unpack(str[start:end])
      return self
    except struct.error, e:
      raise roslib.message.DeserializationError(e) #most likely buffer underfill


  def serialize_numpy(self, buff, numpy):
    """
    serialize message with numpy array types into buffer
    @param buff: buffer
    @type  buff: StringIO
    @param numpy: numpy python module
    @type  numpy module
    """
    try:
      _x = self
      buff.write(_struct_di.pack(_x.avgHeight, _x.numPoints))
    except struct.error, se: self._check_types(se)
    except TypeError, te: self._check_types(te)

  def deserialize_numpy(self, str, numpy):
    """
    unpack serialized message in str into this message instance using numpy for array types
    @param str: byte array of serialized message
    @type  str: str
    @param numpy: numpy python module
    @type  numpy: module
    """
    try:
      end = 0
      _x = self
      start = end
      end += 12
      (_x.avgHeight, _x.numPoints,) = _struct_di.unpack(str[start:end])
      return self
    except struct.error, e:
      raise roslib.message.DeserializationError(e) #most likely buffer underfill

_struct_I = roslib.message.struct_I
_struct_di = struct.Struct("<di")
class container_get_average_height(roslib.message.ServiceDefinition):
  _type          = 'container_comm/container_get_average_height'
  _md5sum = '1c23073fbe876082334ab5693ab6b4e6'
  _request_class  = container_get_average_heightRequest
  _response_class = container_get_average_heightResponse
