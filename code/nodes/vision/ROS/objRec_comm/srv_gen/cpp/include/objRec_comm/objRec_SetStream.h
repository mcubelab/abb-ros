/* Auto-generated by genmsg_cpp for file /home/mcube/hands_MLab/code/nodes/vision/ROS/objRec_comm/srv/objRec_SetStream.srv */
#ifndef OBJREC_COMM_SERVICE_OBJREC_SETSTREAM_H
#define OBJREC_COMM_SERVICE_OBJREC_SETSTREAM_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"




namespace objRec_comm
{
template <class ContainerAllocator>
struct objRec_SetStreamRequest_ {
  typedef objRec_SetStreamRequest_<ContainerAllocator> Type;

  objRec_SetStreamRequest_()
  : streaming(false)
  , cameraName()
  {
  }

  objRec_SetStreamRequest_(const ContainerAllocator& _alloc)
  : streaming(false)
  , cameraName(_alloc)
  {
  }

  typedef uint8_t _streaming_type;
  uint8_t streaming;

  typedef std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  _cameraName_type;
  std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  cameraName;


  typedef boost::shared_ptr< ::objRec_comm::objRec_SetStreamRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::objRec_comm::objRec_SetStreamRequest_<ContainerAllocator>  const> ConstPtr;
}; // struct objRec_SetStreamRequest
typedef  ::objRec_comm::objRec_SetStreamRequest_<std::allocator<void> > objRec_SetStreamRequest;

typedef boost::shared_ptr< ::objRec_comm::objRec_SetStreamRequest> objRec_SetStreamRequestPtr;
typedef boost::shared_ptr< ::objRec_comm::objRec_SetStreamRequest const> objRec_SetStreamRequestConstPtr;



template <class ContainerAllocator>
struct objRec_SetStreamResponse_ {
  typedef objRec_SetStreamResponse_<ContainerAllocator> Type;

  objRec_SetStreamResponse_()
  : ret(0)
  , msg()
  {
  }

  objRec_SetStreamResponse_(const ContainerAllocator& _alloc)
  : ret(0)
  , msg(_alloc)
  {
  }

  typedef int64_t _ret_type;
  int64_t ret;

  typedef std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  _msg_type;
  std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  msg;


  typedef boost::shared_ptr< ::objRec_comm::objRec_SetStreamResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::objRec_comm::objRec_SetStreamResponse_<ContainerAllocator>  const> ConstPtr;
}; // struct objRec_SetStreamResponse
typedef  ::objRec_comm::objRec_SetStreamResponse_<std::allocator<void> > objRec_SetStreamResponse;

typedef boost::shared_ptr< ::objRec_comm::objRec_SetStreamResponse> objRec_SetStreamResponsePtr;
typedef boost::shared_ptr< ::objRec_comm::objRec_SetStreamResponse const> objRec_SetStreamResponseConstPtr;


struct objRec_SetStream
{

typedef objRec_SetStreamRequest Request;
typedef objRec_SetStreamResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct objRec_SetStream
} // namespace objRec_comm

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::objRec_comm::objRec_SetStreamRequest_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::objRec_comm::objRec_SetStreamRequest_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::objRec_comm::objRec_SetStreamRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "fa116f76f86d2be9778e6e9955eafa9f";
  }

  static const char* value(const  ::objRec_comm::objRec_SetStreamRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xfa116f76f86d2be9ULL;
  static const uint64_t static_value2 = 0x778e6e9955eafa9fULL;
};

template<class ContainerAllocator>
struct DataType< ::objRec_comm::objRec_SetStreamRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "objRec_comm/objRec_SetStreamRequest";
  }

  static const char* value(const  ::objRec_comm::objRec_SetStreamRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::objRec_comm::objRec_SetStreamRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "\n\
\n\
\n\
\n\
bool streaming\n\
string cameraName\n\
\n\
\n\
";
  }

  static const char* value(const  ::objRec_comm::objRec_SetStreamRequest_<ContainerAllocator> &) { return value(); } 
};

} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::objRec_comm::objRec_SetStreamResponse_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::objRec_comm::objRec_SetStreamResponse_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::objRec_comm::objRec_SetStreamResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "1e32786be6359fbbb6259aee4f579d10";
  }

  static const char* value(const  ::objRec_comm::objRec_SetStreamResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x1e32786be6359fbbULL;
  static const uint64_t static_value2 = 0xb6259aee4f579d10ULL;
};

template<class ContainerAllocator>
struct DataType< ::objRec_comm::objRec_SetStreamResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "objRec_comm/objRec_SetStreamResponse";
  }

  static const char* value(const  ::objRec_comm::objRec_SetStreamResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::objRec_comm::objRec_SetStreamResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "\n\
int64 ret\n\
string msg\n\
\n\
\n\
\n\
";
  }

  static const char* value(const  ::objRec_comm::objRec_SetStreamResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::objRec_comm::objRec_SetStreamRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.streaming);
    stream.next(m.cameraName);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct objRec_SetStreamRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::objRec_comm::objRec_SetStreamResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.ret);
    stream.next(m.msg);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct objRec_SetStreamResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<objRec_comm::objRec_SetStream> {
  static const char* value() 
  {
    return "d91a7e76b8093c49a72a190a56fc161b";
  }

  static const char* value(const objRec_comm::objRec_SetStream&) { return value(); } 
};

template<>
struct DataType<objRec_comm::objRec_SetStream> {
  static const char* value() 
  {
    return "objRec_comm/objRec_SetStream";
  }

  static const char* value(const objRec_comm::objRec_SetStream&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<objRec_comm::objRec_SetStreamRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "d91a7e76b8093c49a72a190a56fc161b";
  }

  static const char* value(const objRec_comm::objRec_SetStreamRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<objRec_comm::objRec_SetStreamRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "objRec_comm/objRec_SetStream";
  }

  static const char* value(const objRec_comm::objRec_SetStreamRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<objRec_comm::objRec_SetStreamResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "d91a7e76b8093c49a72a190a56fc161b";
  }

  static const char* value(const objRec_comm::objRec_SetStreamResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<objRec_comm::objRec_SetStreamResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "objRec_comm/objRec_SetStream";
  }

  static const char* value(const objRec_comm::objRec_SetStreamResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // OBJREC_COMM_SERVICE_OBJREC_SETSTREAM_H

