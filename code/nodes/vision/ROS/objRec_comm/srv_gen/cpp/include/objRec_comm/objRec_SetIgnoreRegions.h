/* Auto-generated by genmsg_cpp for file /home/mcube/hands_MLab/code/nodes/vision/ROS/objRec_comm/srv/objRec_SetIgnoreRegions.srv */
#ifndef OBJREC_COMM_SERVICE_OBJREC_SETIGNOREREGIONS_H
#define OBJREC_COMM_SERVICE_OBJREC_SETIGNOREREGIONS_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"




namespace objRec_comm
{
template <class ContainerAllocator>
struct objRec_SetIgnoreRegionsRequest_ {
  typedef objRec_SetIgnoreRegionsRequest_<ContainerAllocator> Type;

  objRec_SetIgnoreRegionsRequest_()
  : num_regions(0)
  , widths()
  , trans()
  , quats()
  {
  }

  objRec_SetIgnoreRegionsRequest_(const ContainerAllocator& _alloc)
  : num_regions(0)
  , widths(_alloc)
  , trans(_alloc)
  , quats(_alloc)
  {
  }

  typedef int64_t _num_regions_type;
  int64_t num_regions;

  typedef std::vector<double, typename ContainerAllocator::template rebind<double>::other >  _widths_type;
  std::vector<double, typename ContainerAllocator::template rebind<double>::other >  widths;

  typedef std::vector<double, typename ContainerAllocator::template rebind<double>::other >  _trans_type;
  std::vector<double, typename ContainerAllocator::template rebind<double>::other >  trans;

  typedef std::vector<double, typename ContainerAllocator::template rebind<double>::other >  _quats_type;
  std::vector<double, typename ContainerAllocator::template rebind<double>::other >  quats;


  typedef boost::shared_ptr< ::objRec_comm::objRec_SetIgnoreRegionsRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::objRec_comm::objRec_SetIgnoreRegionsRequest_<ContainerAllocator>  const> ConstPtr;
}; // struct objRec_SetIgnoreRegionsRequest
typedef  ::objRec_comm::objRec_SetIgnoreRegionsRequest_<std::allocator<void> > objRec_SetIgnoreRegionsRequest;

typedef boost::shared_ptr< ::objRec_comm::objRec_SetIgnoreRegionsRequest> objRec_SetIgnoreRegionsRequestPtr;
typedef boost::shared_ptr< ::objRec_comm::objRec_SetIgnoreRegionsRequest const> objRec_SetIgnoreRegionsRequestConstPtr;



template <class ContainerAllocator>
struct objRec_SetIgnoreRegionsResponse_ {
  typedef objRec_SetIgnoreRegionsResponse_<ContainerAllocator> Type;

  objRec_SetIgnoreRegionsResponse_()
  : ret(0)
  , msg()
  {
  }

  objRec_SetIgnoreRegionsResponse_(const ContainerAllocator& _alloc)
  : ret(0)
  , msg(_alloc)
  {
  }

  typedef int64_t _ret_type;
  int64_t ret;

  typedef std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  _msg_type;
  std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  msg;


  typedef boost::shared_ptr< ::objRec_comm::objRec_SetIgnoreRegionsResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::objRec_comm::objRec_SetIgnoreRegionsResponse_<ContainerAllocator>  const> ConstPtr;
}; // struct objRec_SetIgnoreRegionsResponse
typedef  ::objRec_comm::objRec_SetIgnoreRegionsResponse_<std::allocator<void> > objRec_SetIgnoreRegionsResponse;

typedef boost::shared_ptr< ::objRec_comm::objRec_SetIgnoreRegionsResponse> objRec_SetIgnoreRegionsResponsePtr;
typedef boost::shared_ptr< ::objRec_comm::objRec_SetIgnoreRegionsResponse const> objRec_SetIgnoreRegionsResponseConstPtr;


struct objRec_SetIgnoreRegions
{

typedef objRec_SetIgnoreRegionsRequest Request;
typedef objRec_SetIgnoreRegionsResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct objRec_SetIgnoreRegions
} // namespace objRec_comm

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::objRec_comm::objRec_SetIgnoreRegionsRequest_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::objRec_comm::objRec_SetIgnoreRegionsRequest_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::objRec_comm::objRec_SetIgnoreRegionsRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "88c74c7ed75b9fca3bfac49682651a7f";
  }

  static const char* value(const  ::objRec_comm::objRec_SetIgnoreRegionsRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x88c74c7ed75b9fcaULL;
  static const uint64_t static_value2 = 0x3bfac49682651a7fULL;
};

template<class ContainerAllocator>
struct DataType< ::objRec_comm::objRec_SetIgnoreRegionsRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "objRec_comm/objRec_SetIgnoreRegionsRequest";
  }

  static const char* value(const  ::objRec_comm::objRec_SetIgnoreRegionsRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::objRec_comm::objRec_SetIgnoreRegionsRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "\n\
\n\
\n\
int64 num_regions\n\
float64[] widths\n\
float64[] trans\n\
float64[] quats\n\
\n\
\n\
";
  }

  static const char* value(const  ::objRec_comm::objRec_SetIgnoreRegionsRequest_<ContainerAllocator> &) { return value(); } 
};

} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::objRec_comm::objRec_SetIgnoreRegionsResponse_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::objRec_comm::objRec_SetIgnoreRegionsResponse_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::objRec_comm::objRec_SetIgnoreRegionsResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "1e32786be6359fbbb6259aee4f579d10";
  }

  static const char* value(const  ::objRec_comm::objRec_SetIgnoreRegionsResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x1e32786be6359fbbULL;
  static const uint64_t static_value2 = 0xb6259aee4f579d10ULL;
};

template<class ContainerAllocator>
struct DataType< ::objRec_comm::objRec_SetIgnoreRegionsResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "objRec_comm/objRec_SetIgnoreRegionsResponse";
  }

  static const char* value(const  ::objRec_comm::objRec_SetIgnoreRegionsResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::objRec_comm::objRec_SetIgnoreRegionsResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "\n\
int64 ret\n\
string msg\n\
\n\
\n\
";
  }

  static const char* value(const  ::objRec_comm::objRec_SetIgnoreRegionsResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::objRec_comm::objRec_SetIgnoreRegionsRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.num_regions);
    stream.next(m.widths);
    stream.next(m.trans);
    stream.next(m.quats);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct objRec_SetIgnoreRegionsRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::objRec_comm::objRec_SetIgnoreRegionsResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.ret);
    stream.next(m.msg);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct objRec_SetIgnoreRegionsResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<objRec_comm::objRec_SetIgnoreRegions> {
  static const char* value() 
  {
    return "12866496b8e2d989f2131728f0e5c751";
  }

  static const char* value(const objRec_comm::objRec_SetIgnoreRegions&) { return value(); } 
};

template<>
struct DataType<objRec_comm::objRec_SetIgnoreRegions> {
  static const char* value() 
  {
    return "objRec_comm/objRec_SetIgnoreRegions";
  }

  static const char* value(const objRec_comm::objRec_SetIgnoreRegions&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<objRec_comm::objRec_SetIgnoreRegionsRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "12866496b8e2d989f2131728f0e5c751";
  }

  static const char* value(const objRec_comm::objRec_SetIgnoreRegionsRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<objRec_comm::objRec_SetIgnoreRegionsRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "objRec_comm/objRec_SetIgnoreRegions";
  }

  static const char* value(const objRec_comm::objRec_SetIgnoreRegionsRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<objRec_comm::objRec_SetIgnoreRegionsResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "12866496b8e2d989f2131728f0e5c751";
  }

  static const char* value(const objRec_comm::objRec_SetIgnoreRegionsResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<objRec_comm::objRec_SetIgnoreRegionsResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "objRec_comm/objRec_SetIgnoreRegions";
  }

  static const char* value(const objRec_comm::objRec_SetIgnoreRegionsResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // OBJREC_COMM_SERVICE_OBJREC_SETIGNOREREGIONS_H

