/* Auto-generated by genmsg_cpp for file /home/mcube/hands_MLab/code/nodes/vision/ROS/objRec_comm/srv/objRec_SetParams.srv */
#ifndef OBJREC_COMM_SERVICE_OBJREC_SETPARAMS_H
#define OBJREC_COMM_SERVICE_OBJREC_SETPARAMS_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"




namespace objRec_comm
{
template <class ContainerAllocator>
struct objRec_SetParamsRequest_ {
  typedef objRec_SetParamsRequest_<ContainerAllocator> Type;

  objRec_SetParamsRequest_()
  : normal_radius(0.0)
  , feature_radius(0.0)
  , num_samples(0)
  , min_sample_dist(0.0)
  , k_correspondences(0)
  {
  }

  objRec_SetParamsRequest_(const ContainerAllocator& _alloc)
  : normal_radius(0.0)
  , feature_radius(0.0)
  , num_samples(0)
  , min_sample_dist(0.0)
  , k_correspondences(0)
  {
  }

  typedef double _normal_radius_type;
  double normal_radius;

  typedef double _feature_radius_type;
  double feature_radius;

  typedef int64_t _num_samples_type;
  int64_t num_samples;

  typedef double _min_sample_dist_type;
  double min_sample_dist;

  typedef int64_t _k_correspondences_type;
  int64_t k_correspondences;


  typedef boost::shared_ptr< ::objRec_comm::objRec_SetParamsRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::objRec_comm::objRec_SetParamsRequest_<ContainerAllocator>  const> ConstPtr;
}; // struct objRec_SetParamsRequest
typedef  ::objRec_comm::objRec_SetParamsRequest_<std::allocator<void> > objRec_SetParamsRequest;

typedef boost::shared_ptr< ::objRec_comm::objRec_SetParamsRequest> objRec_SetParamsRequestPtr;
typedef boost::shared_ptr< ::objRec_comm::objRec_SetParamsRequest const> objRec_SetParamsRequestConstPtr;



template <class ContainerAllocator>
struct objRec_SetParamsResponse_ {
  typedef objRec_SetParamsResponse_<ContainerAllocator> Type;

  objRec_SetParamsResponse_()
  : ret(0)
  , msg()
  {
  }

  objRec_SetParamsResponse_(const ContainerAllocator& _alloc)
  : ret(0)
  , msg(_alloc)
  {
  }

  typedef int64_t _ret_type;
  int64_t ret;

  typedef std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  _msg_type;
  std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  msg;


  typedef boost::shared_ptr< ::objRec_comm::objRec_SetParamsResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::objRec_comm::objRec_SetParamsResponse_<ContainerAllocator>  const> ConstPtr;
}; // struct objRec_SetParamsResponse
typedef  ::objRec_comm::objRec_SetParamsResponse_<std::allocator<void> > objRec_SetParamsResponse;

typedef boost::shared_ptr< ::objRec_comm::objRec_SetParamsResponse> objRec_SetParamsResponsePtr;
typedef boost::shared_ptr< ::objRec_comm::objRec_SetParamsResponse const> objRec_SetParamsResponseConstPtr;


struct objRec_SetParams
{

typedef objRec_SetParamsRequest Request;
typedef objRec_SetParamsResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct objRec_SetParams
} // namespace objRec_comm

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::objRec_comm::objRec_SetParamsRequest_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::objRec_comm::objRec_SetParamsRequest_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::objRec_comm::objRec_SetParamsRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "21878d38fd388259f35adfba82d7abc4";
  }

  static const char* value(const  ::objRec_comm::objRec_SetParamsRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x21878d38fd388259ULL;
  static const uint64_t static_value2 = 0xf35adfba82d7abc4ULL;
};

template<class ContainerAllocator>
struct DataType< ::objRec_comm::objRec_SetParamsRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "objRec_comm/objRec_SetParamsRequest";
  }

  static const char* value(const  ::objRec_comm::objRec_SetParamsRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::objRec_comm::objRec_SetParamsRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "\n\
\n\
\n\
float64 normal_radius\n\
float64 feature_radius\n\
int64 num_samples\n\
float64 min_sample_dist\n\
int64 k_correspondences\n\
\n\
\n\
";
  }

  static const char* value(const  ::objRec_comm::objRec_SetParamsRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::objRec_comm::objRec_SetParamsRequest_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::objRec_comm::objRec_SetParamsResponse_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::objRec_comm::objRec_SetParamsResponse_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::objRec_comm::objRec_SetParamsResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "1e32786be6359fbbb6259aee4f579d10";
  }

  static const char* value(const  ::objRec_comm::objRec_SetParamsResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x1e32786be6359fbbULL;
  static const uint64_t static_value2 = 0xb6259aee4f579d10ULL;
};

template<class ContainerAllocator>
struct DataType< ::objRec_comm::objRec_SetParamsResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "objRec_comm/objRec_SetParamsResponse";
  }

  static const char* value(const  ::objRec_comm::objRec_SetParamsResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::objRec_comm::objRec_SetParamsResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "\n\
int64 ret\n\
string msg\n\
\n\
\n\
\n\
";
  }

  static const char* value(const  ::objRec_comm::objRec_SetParamsResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::objRec_comm::objRec_SetParamsRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.normal_radius);
    stream.next(m.feature_radius);
    stream.next(m.num_samples);
    stream.next(m.min_sample_dist);
    stream.next(m.k_correspondences);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct objRec_SetParamsRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::objRec_comm::objRec_SetParamsResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.ret);
    stream.next(m.msg);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct objRec_SetParamsResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<objRec_comm::objRec_SetParams> {
  static const char* value() 
  {
    return "29739c37e40bdfb14d3ba341499c64dc";
  }

  static const char* value(const objRec_comm::objRec_SetParams&) { return value(); } 
};

template<>
struct DataType<objRec_comm::objRec_SetParams> {
  static const char* value() 
  {
    return "objRec_comm/objRec_SetParams";
  }

  static const char* value(const objRec_comm::objRec_SetParams&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<objRec_comm::objRec_SetParamsRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "29739c37e40bdfb14d3ba341499c64dc";
  }

  static const char* value(const objRec_comm::objRec_SetParamsRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<objRec_comm::objRec_SetParamsRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "objRec_comm/objRec_SetParams";
  }

  static const char* value(const objRec_comm::objRec_SetParamsRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<objRec_comm::objRec_SetParamsResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "29739c37e40bdfb14d3ba341499c64dc";
  }

  static const char* value(const objRec_comm::objRec_SetParamsResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<objRec_comm::objRec_SetParamsResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "objRec_comm/objRec_SetParams";
  }

  static const char* value(const objRec_comm::objRec_SetParamsResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // OBJREC_COMM_SERVICE_OBJREC_SETPARAMS_H

