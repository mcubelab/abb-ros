/* Auto-generated by genmsg_cpp for file /home/mcube/hands_MLab/code/nodes/vision/ROS/objRec_comm/srv/objRec_SavePoints.srv */
#ifndef OBJREC_COMM_SERVICE_OBJREC_SAVEPOINTS_H
#define OBJREC_COMM_SERVICE_OBJREC_SAVEPOINTS_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"




namespace objRec_comm
{
template <class ContainerAllocator>
struct objRec_SavePointsRequest_ {
  typedef objRec_SavePointsRequest_<ContainerAllocator> Type;

  objRec_SavePointsRequest_()
  : is_binary(false)
  , use_filter(false)
  , cameraName()
  {
  }

  objRec_SavePointsRequest_(const ContainerAllocator& _alloc)
  : is_binary(false)
  , use_filter(false)
  , cameraName(_alloc)
  {
  }

  typedef uint8_t _is_binary_type;
  uint8_t is_binary;

  typedef uint8_t _use_filter_type;
  uint8_t use_filter;

  typedef std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  _cameraName_type;
  std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  cameraName;


  typedef boost::shared_ptr< ::objRec_comm::objRec_SavePointsRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::objRec_comm::objRec_SavePointsRequest_<ContainerAllocator>  const> ConstPtr;
}; // struct objRec_SavePointsRequest
typedef  ::objRec_comm::objRec_SavePointsRequest_<std::allocator<void> > objRec_SavePointsRequest;

typedef boost::shared_ptr< ::objRec_comm::objRec_SavePointsRequest> objRec_SavePointsRequestPtr;
typedef boost::shared_ptr< ::objRec_comm::objRec_SavePointsRequest const> objRec_SavePointsRequestConstPtr;



template <class ContainerAllocator>
struct objRec_SavePointsResponse_ {
  typedef objRec_SavePointsResponse_<ContainerAllocator> Type;

  objRec_SavePointsResponse_()
  : filename()
  , ret(0)
  , msg()
  {
  }

  objRec_SavePointsResponse_(const ContainerAllocator& _alloc)
  : filename(_alloc)
  , ret(0)
  , msg(_alloc)
  {
  }

  typedef std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  _filename_type;
  std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  filename;

  typedef int64_t _ret_type;
  int64_t ret;

  typedef std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  _msg_type;
  std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  msg;


  typedef boost::shared_ptr< ::objRec_comm::objRec_SavePointsResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::objRec_comm::objRec_SavePointsResponse_<ContainerAllocator>  const> ConstPtr;
}; // struct objRec_SavePointsResponse
typedef  ::objRec_comm::objRec_SavePointsResponse_<std::allocator<void> > objRec_SavePointsResponse;

typedef boost::shared_ptr< ::objRec_comm::objRec_SavePointsResponse> objRec_SavePointsResponsePtr;
typedef boost::shared_ptr< ::objRec_comm::objRec_SavePointsResponse const> objRec_SavePointsResponseConstPtr;


struct objRec_SavePoints
{

typedef objRec_SavePointsRequest Request;
typedef objRec_SavePointsResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct objRec_SavePoints
} // namespace objRec_comm

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::objRec_comm::objRec_SavePointsRequest_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::objRec_comm::objRec_SavePointsRequest_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::objRec_comm::objRec_SavePointsRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "07a3c9f8014bd8a0d7c2da9524fa3451";
  }

  static const char* value(const  ::objRec_comm::objRec_SavePointsRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x07a3c9f8014bd8a0ULL;
  static const uint64_t static_value2 = 0xd7c2da9524fa3451ULL;
};

template<class ContainerAllocator>
struct DataType< ::objRec_comm::objRec_SavePointsRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "objRec_comm/objRec_SavePointsRequest";
  }

  static const char* value(const  ::objRec_comm::objRec_SavePointsRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::objRec_comm::objRec_SavePointsRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "\n\
\n\
\n\
\n\
bool is_binary\n\
bool use_filter\n\
string cameraName\n\
\n\
";
  }

  static const char* value(const  ::objRec_comm::objRec_SavePointsRequest_<ContainerAllocator> &) { return value(); } 
};

} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::objRec_comm::objRec_SavePointsResponse_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::objRec_comm::objRec_SavePointsResponse_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::objRec_comm::objRec_SavePointsResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "c38c43175a19a935e6ed91a689ba16f4";
  }

  static const char* value(const  ::objRec_comm::objRec_SavePointsResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xc38c43175a19a935ULL;
  static const uint64_t static_value2 = 0xe6ed91a689ba16f4ULL;
};

template<class ContainerAllocator>
struct DataType< ::objRec_comm::objRec_SavePointsResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "objRec_comm/objRec_SavePointsResponse";
  }

  static const char* value(const  ::objRec_comm::objRec_SavePointsResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::objRec_comm::objRec_SavePointsResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "\n\
string filename\n\
int64 ret\n\
string msg\n\
\n\
\n\
\n\
";
  }

  static const char* value(const  ::objRec_comm::objRec_SavePointsResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::objRec_comm::objRec_SavePointsRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.is_binary);
    stream.next(m.use_filter);
    stream.next(m.cameraName);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct objRec_SavePointsRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::objRec_comm::objRec_SavePointsResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.filename);
    stream.next(m.ret);
    stream.next(m.msg);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct objRec_SavePointsResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<objRec_comm::objRec_SavePoints> {
  static const char* value() 
  {
    return "d13bc45391fe78d603201522338f3080";
  }

  static const char* value(const objRec_comm::objRec_SavePoints&) { return value(); } 
};

template<>
struct DataType<objRec_comm::objRec_SavePoints> {
  static const char* value() 
  {
    return "objRec_comm/objRec_SavePoints";
  }

  static const char* value(const objRec_comm::objRec_SavePoints&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<objRec_comm::objRec_SavePointsRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "d13bc45391fe78d603201522338f3080";
  }

  static const char* value(const objRec_comm::objRec_SavePointsRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<objRec_comm::objRec_SavePointsRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "objRec_comm/objRec_SavePoints";
  }

  static const char* value(const objRec_comm::objRec_SavePointsRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<objRec_comm::objRec_SavePointsResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "d13bc45391fe78d603201522338f3080";
  }

  static const char* value(const objRec_comm::objRec_SavePointsResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<objRec_comm::objRec_SavePointsResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "objRec_comm/objRec_SavePoints";
  }

  static const char* value(const objRec_comm::objRec_SavePointsResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // OBJREC_COMM_SERVICE_OBJREC_SAVEPOINTS_H

