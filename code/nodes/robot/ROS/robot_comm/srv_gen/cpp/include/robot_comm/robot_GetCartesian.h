/* Auto-generated by genmsg_cpp for file /home/mcube/hands_MLab/code/nodes/robot/ROS/robot_comm/srv/robot_GetCartesian.srv */
#ifndef ROBOT_COMM_SERVICE_ROBOT_GETCARTESIAN_H
#define ROBOT_COMM_SERVICE_ROBOT_GETCARTESIAN_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"




namespace robot_comm
{
template <class ContainerAllocator>
struct robot_GetCartesianRequest_ {
  typedef robot_GetCartesianRequest_<ContainerAllocator> Type;

  robot_GetCartesianRequest_()
  {
  }

  robot_GetCartesianRequest_(const ContainerAllocator& _alloc)
  {
  }


  typedef boost::shared_ptr< ::robot_comm::robot_GetCartesianRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::robot_comm::robot_GetCartesianRequest_<ContainerAllocator>  const> ConstPtr;
}; // struct robot_GetCartesianRequest
typedef  ::robot_comm::robot_GetCartesianRequest_<std::allocator<void> > robot_GetCartesianRequest;

typedef boost::shared_ptr< ::robot_comm::robot_GetCartesianRequest> robot_GetCartesianRequestPtr;
typedef boost::shared_ptr< ::robot_comm::robot_GetCartesianRequest const> robot_GetCartesianRequestConstPtr;



template <class ContainerAllocator>
struct robot_GetCartesianResponse_ {
  typedef robot_GetCartesianResponse_<ContainerAllocator> Type;

  robot_GetCartesianResponse_()
  : x(0.0)
  , y(0.0)
  , z(0.0)
  , q0(0.0)
  , qx(0.0)
  , qy(0.0)
  , qz(0.0)
  , ret(0)
  , msg()
  {
  }

  robot_GetCartesianResponse_(const ContainerAllocator& _alloc)
  : x(0.0)
  , y(0.0)
  , z(0.0)
  , q0(0.0)
  , qx(0.0)
  , qy(0.0)
  , qz(0.0)
  , ret(0)
  , msg(_alloc)
  {
  }

  typedef double _x_type;
  double x;

  typedef double _y_type;
  double y;

  typedef double _z_type;
  double z;

  typedef double _q0_type;
  double q0;

  typedef double _qx_type;
  double qx;

  typedef double _qy_type;
  double qy;

  typedef double _qz_type;
  double qz;

  typedef int64_t _ret_type;
  int64_t ret;

  typedef std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  _msg_type;
  std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  msg;


  typedef boost::shared_ptr< ::robot_comm::robot_GetCartesianResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::robot_comm::robot_GetCartesianResponse_<ContainerAllocator>  const> ConstPtr;
}; // struct robot_GetCartesianResponse
typedef  ::robot_comm::robot_GetCartesianResponse_<std::allocator<void> > robot_GetCartesianResponse;

typedef boost::shared_ptr< ::robot_comm::robot_GetCartesianResponse> robot_GetCartesianResponsePtr;
typedef boost::shared_ptr< ::robot_comm::robot_GetCartesianResponse const> robot_GetCartesianResponseConstPtr;


struct robot_GetCartesian
{

typedef robot_GetCartesianRequest Request;
typedef robot_GetCartesianResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct robot_GetCartesian
} // namespace robot_comm

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::robot_comm::robot_GetCartesianRequest_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::robot_comm::robot_GetCartesianRequest_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::robot_comm::robot_GetCartesianRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "d41d8cd98f00b204e9800998ecf8427e";
  }

  static const char* value(const  ::robot_comm::robot_GetCartesianRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xd41d8cd98f00b204ULL;
  static const uint64_t static_value2 = 0xe9800998ecf8427eULL;
};

template<class ContainerAllocator>
struct DataType< ::robot_comm::robot_GetCartesianRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "robot_comm/robot_GetCartesianRequest";
  }

  static const char* value(const  ::robot_comm::robot_GetCartesianRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::robot_comm::robot_GetCartesianRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "\n\
\n\
\n\
";
  }

  static const char* value(const  ::robot_comm::robot_GetCartesianRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::robot_comm::robot_GetCartesianRequest_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::robot_comm::robot_GetCartesianResponse_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::robot_comm::robot_GetCartesianResponse_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::robot_comm::robot_GetCartesianResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "3f432c2b24231bfa1982c3d95599d931";
  }

  static const char* value(const  ::robot_comm::robot_GetCartesianResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x3f432c2b24231bfaULL;
  static const uint64_t static_value2 = 0x1982c3d95599d931ULL;
};

template<class ContainerAllocator>
struct DataType< ::robot_comm::robot_GetCartesianResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "robot_comm/robot_GetCartesianResponse";
  }

  static const char* value(const  ::robot_comm::robot_GetCartesianResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::robot_comm::robot_GetCartesianResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "float64 x\n\
float64 y\n\
float64 z\n\
float64 q0\n\
float64 qx\n\
float64 qy\n\
float64 qz\n\
int64 ret\n\
string msg\n\
\n\
";
  }

  static const char* value(const  ::robot_comm::robot_GetCartesianResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::robot_comm::robot_GetCartesianRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct robot_GetCartesianRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::robot_comm::robot_GetCartesianResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.x);
    stream.next(m.y);
    stream.next(m.z);
    stream.next(m.q0);
    stream.next(m.qx);
    stream.next(m.qy);
    stream.next(m.qz);
    stream.next(m.ret);
    stream.next(m.msg);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct robot_GetCartesianResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<robot_comm::robot_GetCartesian> {
  static const char* value() 
  {
    return "3f432c2b24231bfa1982c3d95599d931";
  }

  static const char* value(const robot_comm::robot_GetCartesian&) { return value(); } 
};

template<>
struct DataType<robot_comm::robot_GetCartesian> {
  static const char* value() 
  {
    return "robot_comm/robot_GetCartesian";
  }

  static const char* value(const robot_comm::robot_GetCartesian&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<robot_comm::robot_GetCartesianRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "3f432c2b24231bfa1982c3d95599d931";
  }

  static const char* value(const robot_comm::robot_GetCartesianRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<robot_comm::robot_GetCartesianRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "robot_comm/robot_GetCartesian";
  }

  static const char* value(const robot_comm::robot_GetCartesianRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<robot_comm::robot_GetCartesianResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "3f432c2b24231bfa1982c3d95599d931";
  }

  static const char* value(const robot_comm::robot_GetCartesianResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<robot_comm::robot_GetCartesianResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "robot_comm/robot_GetCartesian";
  }

  static const char* value(const robot_comm::robot_GetCartesianResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // ROBOT_COMM_SERVICE_ROBOT_GETCARTESIAN_H

