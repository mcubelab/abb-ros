/* Auto-generated by genmsg_cpp for file /home/mcube/hands_MLab/code/nodes/robot/ROS/robot_comm/srv/robot_SetWorkObject.srv */
#ifndef ROBOT_COMM_SERVICE_ROBOT_SETWORKOBJECT_H
#define ROBOT_COMM_SERVICE_ROBOT_SETWORKOBJECT_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"




namespace robot_comm
{
template <class ContainerAllocator>
struct robot_SetWorkObjectRequest_ {
  typedef robot_SetWorkObjectRequest_<ContainerAllocator> Type;

  robot_SetWorkObjectRequest_()
  : x(0.0)
  , y(0.0)
  , z(0.0)
  , q0(0.0)
  , qx(0.0)
  , qy(0.0)
  , qz(0.0)
  {
  }

  robot_SetWorkObjectRequest_(const ContainerAllocator& _alloc)
  : x(0.0)
  , y(0.0)
  , z(0.0)
  , q0(0.0)
  , qx(0.0)
  , qy(0.0)
  , qz(0.0)
  {
  }

  typedef double _x_type;
  double x;

  typedef double _y_type;
  double y;

  typedef double _z_type;
  double z;

  typedef double _q0_type;
  double q0;

  typedef double _qx_type;
  double qx;

  typedef double _qy_type;
  double qy;

  typedef double _qz_type;
  double qz;


  typedef boost::shared_ptr< ::robot_comm::robot_SetWorkObjectRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::robot_comm::robot_SetWorkObjectRequest_<ContainerAllocator>  const> ConstPtr;
}; // struct robot_SetWorkObjectRequest
typedef  ::robot_comm::robot_SetWorkObjectRequest_<std::allocator<void> > robot_SetWorkObjectRequest;

typedef boost::shared_ptr< ::robot_comm::robot_SetWorkObjectRequest> robot_SetWorkObjectRequestPtr;
typedef boost::shared_ptr< ::robot_comm::robot_SetWorkObjectRequest const> robot_SetWorkObjectRequestConstPtr;



template <class ContainerAllocator>
struct robot_SetWorkObjectResponse_ {
  typedef robot_SetWorkObjectResponse_<ContainerAllocator> Type;

  robot_SetWorkObjectResponse_()
  : ret(0)
  , msg()
  {
  }

  robot_SetWorkObjectResponse_(const ContainerAllocator& _alloc)
  : ret(0)
  , msg(_alloc)
  {
  }

  typedef int64_t _ret_type;
  int64_t ret;

  typedef std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  _msg_type;
  std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  msg;


  typedef boost::shared_ptr< ::robot_comm::robot_SetWorkObjectResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::robot_comm::robot_SetWorkObjectResponse_<ContainerAllocator>  const> ConstPtr;
}; // struct robot_SetWorkObjectResponse
typedef  ::robot_comm::robot_SetWorkObjectResponse_<std::allocator<void> > robot_SetWorkObjectResponse;

typedef boost::shared_ptr< ::robot_comm::robot_SetWorkObjectResponse> robot_SetWorkObjectResponsePtr;
typedef boost::shared_ptr< ::robot_comm::robot_SetWorkObjectResponse const> robot_SetWorkObjectResponseConstPtr;


struct robot_SetWorkObject
{

typedef robot_SetWorkObjectRequest Request;
typedef robot_SetWorkObjectResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct robot_SetWorkObject
} // namespace robot_comm

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::robot_comm::robot_SetWorkObjectRequest_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::robot_comm::robot_SetWorkObjectRequest_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::robot_comm::robot_SetWorkObjectRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "256392fa17e6514709500a65ddaf30e9";
  }

  static const char* value(const  ::robot_comm::robot_SetWorkObjectRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x256392fa17e65147ULL;
  static const uint64_t static_value2 = 0x09500a65ddaf30e9ULL;
};

template<class ContainerAllocator>
struct DataType< ::robot_comm::robot_SetWorkObjectRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "robot_comm/robot_SetWorkObjectRequest";
  }

  static const char* value(const  ::robot_comm::robot_SetWorkObjectRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::robot_comm::robot_SetWorkObjectRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "\n\
\n\
float64 x\n\
float64 y\n\
float64 z\n\
float64 q0\n\
float64 qx\n\
float64 qy\n\
float64 qz\n\
\n\
";
  }

  static const char* value(const  ::robot_comm::robot_SetWorkObjectRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::robot_comm::robot_SetWorkObjectRequest_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::robot_comm::robot_SetWorkObjectResponse_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::robot_comm::robot_SetWorkObjectResponse_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::robot_comm::robot_SetWorkObjectResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "1e32786be6359fbbb6259aee4f579d10";
  }

  static const char* value(const  ::robot_comm::robot_SetWorkObjectResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x1e32786be6359fbbULL;
  static const uint64_t static_value2 = 0xb6259aee4f579d10ULL;
};

template<class ContainerAllocator>
struct DataType< ::robot_comm::robot_SetWorkObjectResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "robot_comm/robot_SetWorkObjectResponse";
  }

  static const char* value(const  ::robot_comm::robot_SetWorkObjectResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::robot_comm::robot_SetWorkObjectResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "int64 ret\n\
string msg\n\
\n\
\n\
";
  }

  static const char* value(const  ::robot_comm::robot_SetWorkObjectResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::robot_comm::robot_SetWorkObjectRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.x);
    stream.next(m.y);
    stream.next(m.z);
    stream.next(m.q0);
    stream.next(m.qx);
    stream.next(m.qy);
    stream.next(m.qz);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct robot_SetWorkObjectRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::robot_comm::robot_SetWorkObjectResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.ret);
    stream.next(m.msg);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct robot_SetWorkObjectResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<robot_comm::robot_SetWorkObject> {
  static const char* value() 
  {
    return "13716a3f1e232bc5200a276031ef97c2";
  }

  static const char* value(const robot_comm::robot_SetWorkObject&) { return value(); } 
};

template<>
struct DataType<robot_comm::robot_SetWorkObject> {
  static const char* value() 
  {
    return "robot_comm/robot_SetWorkObject";
  }

  static const char* value(const robot_comm::robot_SetWorkObject&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<robot_comm::robot_SetWorkObjectRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "13716a3f1e232bc5200a276031ef97c2";
  }

  static const char* value(const robot_comm::robot_SetWorkObjectRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<robot_comm::robot_SetWorkObjectRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "robot_comm/robot_SetWorkObject";
  }

  static const char* value(const robot_comm::robot_SetWorkObjectRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<robot_comm::robot_SetWorkObjectResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "13716a3f1e232bc5200a276031ef97c2";
  }

  static const char* value(const robot_comm::robot_SetWorkObjectResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<robot_comm::robot_SetWorkObjectResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "robot_comm/robot_SetWorkObject";
  }

  static const char* value(const robot_comm::robot_SetWorkObjectResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // ROBOT_COMM_SERVICE_ROBOT_SETWORKOBJECT_H

