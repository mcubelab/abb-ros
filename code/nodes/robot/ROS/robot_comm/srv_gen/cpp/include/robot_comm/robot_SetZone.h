/* Auto-generated by genmsg_cpp for file /home/mcube/hands_MLab/code/nodes/robot/ROS/robot_comm/srv/robot_SetZone.srv */
#ifndef ROBOT_COMM_SERVICE_ROBOT_SETZONE_H
#define ROBOT_COMM_SERVICE_ROBOT_SETZONE_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"




namespace robot_comm
{
template <class ContainerAllocator>
struct robot_SetZoneRequest_ {
  typedef robot_SetZoneRequest_<ContainerAllocator> Type;

  robot_SetZoneRequest_()
  : mode(0)
  {
  }

  robot_SetZoneRequest_(const ContainerAllocator& _alloc)
  : mode(0)
  {
  }

  typedef int64_t _mode_type;
  int64_t mode;


  typedef boost::shared_ptr< ::robot_comm::robot_SetZoneRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::robot_comm::robot_SetZoneRequest_<ContainerAllocator>  const> ConstPtr;
}; // struct robot_SetZoneRequest
typedef  ::robot_comm::robot_SetZoneRequest_<std::allocator<void> > robot_SetZoneRequest;

typedef boost::shared_ptr< ::robot_comm::robot_SetZoneRequest> robot_SetZoneRequestPtr;
typedef boost::shared_ptr< ::robot_comm::robot_SetZoneRequest const> robot_SetZoneRequestConstPtr;



template <class ContainerAllocator>
struct robot_SetZoneResponse_ {
  typedef robot_SetZoneResponse_<ContainerAllocator> Type;

  robot_SetZoneResponse_()
  : ret(0)
  , msg()
  {
  }

  robot_SetZoneResponse_(const ContainerAllocator& _alloc)
  : ret(0)
  , msg(_alloc)
  {
  }

  typedef int64_t _ret_type;
  int64_t ret;

  typedef std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  _msg_type;
  std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  msg;


  typedef boost::shared_ptr< ::robot_comm::robot_SetZoneResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::robot_comm::robot_SetZoneResponse_<ContainerAllocator>  const> ConstPtr;
}; // struct robot_SetZoneResponse
typedef  ::robot_comm::robot_SetZoneResponse_<std::allocator<void> > robot_SetZoneResponse;

typedef boost::shared_ptr< ::robot_comm::robot_SetZoneResponse> robot_SetZoneResponsePtr;
typedef boost::shared_ptr< ::robot_comm::robot_SetZoneResponse const> robot_SetZoneResponseConstPtr;


struct robot_SetZone
{

typedef robot_SetZoneRequest Request;
typedef robot_SetZoneResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct robot_SetZone
} // namespace robot_comm

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::robot_comm::robot_SetZoneRequest_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::robot_comm::robot_SetZoneRequest_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::robot_comm::robot_SetZoneRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "284404659b502753974e60f7457ed2dc";
  }

  static const char* value(const  ::robot_comm::robot_SetZoneRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x284404659b502753ULL;
  static const uint64_t static_value2 = 0x974e60f7457ed2dcULL;
};

template<class ContainerAllocator>
struct DataType< ::robot_comm::robot_SetZoneRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "robot_comm/robot_SetZoneRequest";
  }

  static const char* value(const  ::robot_comm::robot_SetZoneRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::robot_comm::robot_SetZoneRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "\n\
\n\
\n\
\n\
\n\
\n\
\n\
\n\
int64 mode\n\
\n\
";
  }

  static const char* value(const  ::robot_comm::robot_SetZoneRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::robot_comm::robot_SetZoneRequest_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::robot_comm::robot_SetZoneResponse_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::robot_comm::robot_SetZoneResponse_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::robot_comm::robot_SetZoneResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "1e32786be6359fbbb6259aee4f579d10";
  }

  static const char* value(const  ::robot_comm::robot_SetZoneResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x1e32786be6359fbbULL;
  static const uint64_t static_value2 = 0xb6259aee4f579d10ULL;
};

template<class ContainerAllocator>
struct DataType< ::robot_comm::robot_SetZoneResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "robot_comm/robot_SetZoneResponse";
  }

  static const char* value(const  ::robot_comm::robot_SetZoneResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::robot_comm::robot_SetZoneResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "int64 ret\n\
string msg\n\
\n\
\n\
";
  }

  static const char* value(const  ::robot_comm::robot_SetZoneResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::robot_comm::robot_SetZoneRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.mode);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct robot_SetZoneRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::robot_comm::robot_SetZoneResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.ret);
    stream.next(m.msg);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct robot_SetZoneResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<robot_comm::robot_SetZone> {
  static const char* value() 
  {
    return "9a8139bbede588258d8a8cdc808e7b88";
  }

  static const char* value(const robot_comm::robot_SetZone&) { return value(); } 
};

template<>
struct DataType<robot_comm::robot_SetZone> {
  static const char* value() 
  {
    return "robot_comm/robot_SetZone";
  }

  static const char* value(const robot_comm::robot_SetZone&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<robot_comm::robot_SetZoneRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "9a8139bbede588258d8a8cdc808e7b88";
  }

  static const char* value(const robot_comm::robot_SetZoneRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<robot_comm::robot_SetZoneRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "robot_comm/robot_SetZone";
  }

  static const char* value(const robot_comm::robot_SetZoneRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<robot_comm::robot_SetZoneResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "9a8139bbede588258d8a8cdc808e7b88";
  }

  static const char* value(const robot_comm::robot_SetZoneResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<robot_comm::robot_SetZoneResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "robot_comm/robot_SetZone";
  }

  static const char* value(const robot_comm::robot_SetZoneResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // ROBOT_COMM_SERVICE_ROBOT_SETZONE_H

